@model ExpenseManager.Models.Expense

<head>
    <link href="~/Content/styles/create-expense-page.css" type="text/css" rel="stylesheet" />
</head>

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    if (ViewBag.HasCategories != false)
    {

        <div class="row low"></div>
        <div class="col-lg-6">
            <h3 class="create-expense-title text-center">Your new expense has:</h3>
            <hr class="hr-devider">
            <div class="row">
                <div class="col-lg-12">
                    <h2 class="create-expense-category-title">
                        <text class="you-may-need">You may need to </text><br />
                        <text class="create-category"> @Html.ActionLink("Create", "Create", "Categories")</text>
                        <br /> <text class="new-category-for"> new category for your new expense.</text>
                    </h2>
                </div>
            </div>
        </div>

        <div class="col-lg-6">

            <div class="form-style-6">
                <div class="create-controls">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group ">
                        @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control number" } })
                            @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">

                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control datetime" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        @Html.LabelFor(model => model.CategoryID, "Category", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control text" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextAreaFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control text", @id = "comment" } })
                            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <input type="submit" value="Create" class="btn btn-success center-block button" />

            </div>
        </div>
    }
    else if (ViewBag.HasCategories == false)
    {
        <p>
            Your category list is empty and you can not submit any expenses.
            To be able to lets create some categories
            @Html.ActionLink("Create category", "Create", "Categories")
        </p>
    }

}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
