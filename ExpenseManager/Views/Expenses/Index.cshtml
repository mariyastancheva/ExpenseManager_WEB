@using ExpenseManager.Utils;
@using PagedList;
@using PagedList.Mvc;
@model IPagedList<ExpenseManager.Models.Expense>
   
<head>
    <link href="~/Content/styles/expenses-page.css" rel="stylesheet" />
</head>
   @if (Model.Any())
   {
    <div class="expenses-wrapper">
        <p class="create-new-expense">
            @Html.ActionLink("Create", "Create")
            <h3 class="new-expense-title"> new expense!</h3>
        </p>
        <hr/>

        @using (Html.BeginForm("Index", "Expenses", FormMethod.Get))
        {

        <p class="find-by-category">
            <text class="find-by-category-text">Find by category:</text> @Html.TextBox("searchString")
            <input class="search-by-category"  type="submit" value="Search" />
        </p>

        <p class="find-by-date">
            <text class="find-by-date-text">Find by date:</text>
            @Html.TextBox("searchedDate", "searchedDate", new { @class = "datefield", type = "date" })
            <input class="search-by-date" type="submit" value="Search" />
        </p>
        }
        <div class="expenses-table">
            <table class="table">
                <tr>
                    <th>
                        @Html.ActionLink("Category", "Index", new { sortOrder = ViewBag.NameSortParm })
                        @*Html.DisplayNameFor(model => model.Category.Title)*@
                    </th>
                    <th class="white-cell">
                        @Html.DisplayNameFor(model => model.First().Value)
                    </th>
                    <th>
                        @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm })
                        @*Html.DisplayNameFor(model => model.Date)*@
                    </th>
                    <th class="white-cell"colspan="2">
                        @Html.DisplayNameFor(model => model.First().Comments)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model.Where(e => e.User.UserName == User.Identity.Name))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category.Title)
                        </td>
                        <td >
                            @Html.DisplayFor(modelItem => item.Value)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td class="table-comments" colspan="2">
                            @Html.DisplayFor(modelItem => item.Comments)
                        </td>
                        <td class="expenses-edit-delete-links">
                            @Html.ActionLink("Edit", "Edit", new { id = item.ExpenseID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.ExpenseID })
                        </td>
                    </tr>
                }
            </table>
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = Request.QueryString["searchString"], searchedDate = Request.QueryString["searchedDate"] }))
       
            <p class="table-total">
                Total: @Html.Raw((((decimal)ViewBag.TotalValue).ToString("C2")))
            </p>

         </div>
       

    </div>
   }
   else
   {
    <p>
        There are no expenses.       
    </p>
   }


<script type="text/javascript">
    $(document).ready(function () {
        $("#searchDate").datepicker();
    });
</script>

   
